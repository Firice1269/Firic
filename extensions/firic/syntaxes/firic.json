{
	"name": "Firic",
	"scopeName": "source.fi",
	"patterns": [
		{"include": "#comment"},
		{"include": "#constant"},
		{"include": "#entity"},
		{"include": "#invalid"},
		{"include": "#keyword"},
		{"include": "#string"},
		{"include": "#variable"}
	],
	"repository": {
		"comment": {
			"name": "comment.line.double-dash.firic",
			"match": "--.*$"
		},
		"constant": {
			"patterns": [
				{
					"name": "constant.language.firic",
					"match": "\\b(true|false|null)\\b"
				},
				{
					"name": "constant.numeric.firic",
					"match": "[0-9]*\\.?[0-9]+"
				}
			]
		},
		"entity": {
			"patterns": [
				{
					"name": "entity.name.function.firic",
					"match": "[a-zA-Z_][a-zA-Z0-9_]*(?= *\\()"
				},
				{
					"name": "entity.name.type.firic",
					"match": "(?<=\\b(class|enum)\\b +)[a-zA-Z_][a-zA-Z0-9_]*"
				},
				{
					"name": "entity.name.type.firic",
					"match": "\\."
				},
				{
					"name": "entity.name.type.firic",
					"match": "(?<!\\?[^?]*)(?<!\\bcase\\b.*)(?<!\\bdefault\\b.*)(?<=:[^=,]*)[a-zA-Z_][a-zA-Z0-9_]*"
				},
				{
					"name": "entity.name.type.firic",
					"match": "\\b(any|Array|bool|Dictionary|function|float|int|num|str)\\b"
				}
			]
		},
		"invalid": {
			"name": "invalid.illegal.firic",
			"match": "'"
		},
		"keyword": {
			"patterns": [
				{
					"name": "keyword.control.firic",
					"match": "\\b(break|case|continue|default|else|elseif|export|for|if|in|import|return|switch|while)\\b"
				},
				{
					"name": "keyword.other.firic",
					"match": "\\b(class|enum|func|let|self|this|var)\\b"
				}
			]
		},
		"string": {
			"name": "string.quoted.double.firic",
			"begin": "\"",
			"end": "\"",
			"patterns": [
				{
					"name": "constant.character.escape.firic",
					"match": "\\\\."
				}
			]
		},
		"variable": {
			"name": "variable.firic",
			"match": "[a-zA-Z_][a-zA-Z0-9_]*"
		}
	}
}
